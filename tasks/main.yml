---
- name: download Hadoop
  get_url: url="http://apache-mirror.rbc.ru/pub/apache/hadoop/common/hadoop-{{ hadoop_version }}/hadoop-{{ hadoop_version }}.tar.gz" dest=/root/hadoop-{{ hadoop_version }}.tar.gz

- name: install tar
  package: name=tar state=present
  when: ansible_os_family != 'Elbrus'

- name: unpack Hadoop
  unarchive: copy=no src="/root/hadoop-{{ hadoop_version }}.tar.gz" dest=/opt

- name: create {{ hadoop_distr_prefix }}
  shell: cp -r /opt/hadoop-{{ hadoop_version }} {{ hadoop_distr_prefix }} creates={{ hadoop_distr_prefix }}

- name: add Hadoop user
  user: name={{ hadoop_user }} shell={{ hadoop_user_shell }} state=present

- name: make {{ hadoop_var_prefix }}
  file: path={{ hadoop_var_prefix }} state=directory owner={{ hadoop_user }} group={{ hadoop_user }} mode=0755

- name: put exclusion list
  template: src=exclusion-list dest={{ hadoop_var_prefix }}/exclusion-list backup=yes
  notify: refresh nodes

- name: make {{ hadoop_distr_prefix }}/conf
  file: path={{ hadoop_distr_prefix }}/conf state=directory owner=root group=root mode=0755

- name: put {{ hadoop_distr_prefix }}/conf/core-site.xml
  template: src=core-site.xml dest={{ hadoop_distr_prefix }}/conf/core-site.xml owner=root group=root mode=0644 backup=yes

- name: put {{ hadoop_distr_prefix }}/conf/hdfs-site.xml
  template: src=hdfs-site.xml dest={{ hadoop_distr_prefix }}/conf/hdfs-site.xml owner=root group=root mode=0644 backup=yes

- name: put {{ hadoop_distr_prefix }}/conf/hadoop-env.sh
  template: src=hadoop-env.sh dest={{ hadoop_distr_prefix }}/conf/hadoop-env.sh owner=root group=root mode=0644 backup=yes

- name: put {{ hadoop_distr_prefix }}/conf/hadoop-metrics.properties
  template: src=hadoop-metrics.properties dest={{ hadoop_distr_prefix }}/conf/hadoop-metrics.properties owner=root group=root mode=0644 backup=yes

- name: put {{ hadoop_distr_prefix }}/conf/yarn-env.sh
  template: src=yarn-env.sh dest={{ hadoop_distr_prefix }}/conf/yarn-env.sh owner=root group=root mode=0644 backup=yes
  when: (disable_yarn|default(False) == False)

- name: put {{ hadoop_distr_prefix }}/conf/yarn-site.xml
  template: src=yarn-site.xml dest={{ hadoop_distr_prefix }}/conf/yarn-site.xml owner=root group=root mode=0644 backup=yes
  when: (disable_yarn|default(False) == False)

- name: put {{ hadoop_distr_prefix }}/conf/mapred-site.xml
  template: src=mapred-site.xml dest={{ hadoop_distr_prefix }}/conf/mapred-site.xml owner=root group=root mode=0644 backup=yes
  when: (disable_yarn|default(False) == False)

- name: create {{ hadoop_distr_prefix }}/lib/native/Linux-amd64-64
  file: state=directory path={{ hadoop_distr_prefix }}/lib/native/Linux-amd64-64

- name: make {{ hadoop_distr_prefix }}/logs
  file: path={{ hadoop_distr_prefix }}/logs state=directory owner={{ hadoop_user }} group={{ hadoop_user }} mode=0755

- name: make a link to libhadoop.so
  file: state=link src={{ hadoop_distr_prefix }}/lib/native/libhadoop.so dest={{ hadoop_distr_prefix }}/lib/native/Linux-amd64-64/libhadoop.so

- name: make a link to libhdfs.so
  file: state=link src={{ hadoop_distr_prefix }}/lib/native/libhdfs.so dest={{ hadoop_distr_prefix }}/lib/native/Linux-amd64-64/libhdfs.so
